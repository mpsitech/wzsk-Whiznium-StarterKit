/**
	* \file Wzsk.idl
	* Wzsk DDS publisher interface description for RTI Code Generator
	* \copyright (C) 2018-2020 MPSI Technologies GmbH
	* \author Alexander Wirthmueller (auto-generation)
	* \date created: 25 Oct 2021
  */
// IP header --- ABOVE

typedef char tinyint;
typedef octet utinyint;
typedef short smallint;
typedef unsigned short usmallint;
typedef long int;
typedef unsigned long uint;
typedef long long bigint;
typedef unsigned long long ubigint;

struct DdsFloatmat {
	sequence<float> vec;
	uint M;
	uint N;
};

struct DdsDoublemat {
	sequence<double> vec;
	uint M;
	uint N;
};

typedef string<65536> stringvec;
typedef string<50> vecsref;

module DdsJobWzskIprCorner {
	struct setNTarget_req {
		usmallint NTarget;
	};

	struct setNTarget_reply {
		boolean success;
	};

	struct setRoi_req {
		int roiAx;
		int roiAy;
		int roiBx;
		int roiBy;
		int roiCx;
		int roiCy;
		int roiDx;
		int roiDy;
	};

	struct setRoi_reply {
		boolean success;
	};

	struct setRoiNotFull_req {
		boolean roiNotFull;
	};

	struct setRoiNotFull_reply {
		boolean success;
	};

	struct NTarget {
		usmallint _NTarget;
	};

	struct roiAxRoiAyRoiBxRoiByRoiCxRoiCyRoiDxRoiDy {
		int roiAx;
		int roiAy;
		int roiBx;
		int roiBy;
		int roiCx;
		int roiCy;
		int roiDx;
		int roiDy;
	};

	struct flgShiftScoreMinScoreMax {
		sequence<boolean, 786432> flg;
		utinyint shift;
		utinyint scoreMin;
		utinyint scoreMax;
	};
};

module DdsJobWzskSrcSysinfo {
	struct currCh0VoltCh0 {
		sequence<float, 60> currCh0;
		sequence<float, 60> voltCh0;
	};

	struct currCh1VoltCh1 {
		sequence<float, 60> currCh1;
		sequence<float, 60> voltCh1;
	};

	struct currCh2VoltCh2 {
		sequence<float, 60> currCh2;
		sequence<float, 60> voltCh2;
	};

	struct currCh3VoltCh3 {
		sequence<float, 60> currCh3;
		sequence<float, 60> voltCh3;
	};

	struct loadAllLoadCore0LoadCore1LoadCore2LoadCore3 {
		sequence<float, 60> loadAll;
		sequence<float, 60> loadCore0;
		sequence<float, 60> loadCore1;
		sequence<float, 60> loadCore2;
		sequence<float, 60> loadCore3;
	};

	struct temp {
		sequence<float, 60> _temp;
	};
};

module DdsJobWzskIprTrace {
	struct setLevel_req {
		utinyint levelOn;
		utinyint levelOff;
	};

	struct setLevel_reply {
		boolean success;
	};

	struct setRoi_req {
		int roiAx;
		int roiAy;
		int roiBx;
		int roiBy;
		int roiCx;
		int roiCy;
		int roiDx;
		int roiDy;
	};

	struct setRoi_reply {
		boolean success;
	};

	struct setRoiNotFull_req {
		boolean roiNotFull;
	};

	struct setRoiNotFull_reply {
		boolean success;
	};

	struct pOnLeftPOnRight {
		float pOnLeft;
		float pOnRight;
	};

	struct levelOnLevelOff {
		utinyint levelOn;
		utinyint levelOff;
	};

	struct roiAxRoiAyRoiBxRoiByRoiCxRoiCyRoiDxRoiDy {
		int roiAx;
		int roiAy;
		int roiBx;
		int roiBy;
		int roiCx;
		int roiCy;
		int roiDx;
		int roiDy;
	};

	struct leftRight {
		sequence<boolean, 786432> left;
		sequence<boolean, 786432> right;
	};
};

module DdsJobWzskActServo {
	struct moveto_req {
		float target;
	};

	struct moveto_reply {
		boolean success;
	};

	struct stop_req {
		boolean dummy;
	};

	struct stop_reply {
		boolean success;
	};

	struct turn_req {
		boolean ccwNotCw;
	};

	struct turn_reply {
		boolean success;
	};

	struct zero_req {
		boolean dummy;
	};

	struct zero_reply {
		boolean success;
	};

	struct angleTarget {
		float angle;
		float target;
	};
};

module DdsJobWzskActLaser {
	struct setLeft_req {
		float left;
	};

	struct setLeft_reply {
		boolean success;
	};

	struct setRight_req {
		float right;
	};

	struct setRight_reply {
		boolean success;
	};

	struct leftRight {
		float left;
		float right;
	};
};

module DdsJobWzskActExposure {
	struct setExposure_req {
		boolean autoNotManual;
		float Texp;
	};

	struct setExposure_reply {
		boolean success;
	};

	struct setFocus_req {
		float focus;
	};

	struct setFocus_reply {
		boolean success;
	};

	struct autoNotManualTexp {
		boolean autoNotManual;
		float Texp;
	};

	struct focus {
		float _focus;
	};
};

module DdsJobWzskAcqPreview {
	struct gray {
		sequence<octet, 49152> _gray;
	};

	struct redGreenBlue {
		sequence<octet, 19200> red;
		sequence<octet, 19200> green;
		sequence<octet, 19200> blue;
	};
};

module DdsJobWzskAcqPtcloud {
	struct setDeltaTheta_req {
		float deltaTheta;
	};

	struct setDeltaTheta_reply {
		boolean success;
	};

	struct setDWork_req {
		float dWork;
	};

	struct setDWork_reply {
		boolean success;
	};

	struct deltaTheta {
		float _deltaTheta;
	};

	struct dWork {
		float _dWork;
	};

	struct xYZ {
		sequence<float, 72000> x;
		sequence<float, 72000> y;
		sequence<float, 72000> z;
	};
};
